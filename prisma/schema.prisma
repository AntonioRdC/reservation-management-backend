generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(uuid())
  name          String
  email         String   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  googleProvider      DateTime?
  googleProviderId    String?
  role          UserRole @default(USER)
  bookings      Booking[]
}

model VerificationToken {
  id String @id @default(cuid())
  email String @unique
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id String @id @default(cuid())
  email String @unique
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model Space {
  id            String     @id @default(uuid())
  name          String
  description   String?
  type          SpaceType
  capacity      Int
  hourlyRate    Float?
  dailyRate     Float?
  resources     Resource[]
  bookings      Booking[]
}

enum SpaceType {
  MEETING_ROOM
  AUDITORIUM
  SHARED_WORKSPACE
  OTHER
}

model Resource {
  id          String   @id @default(uuid())
  name        String
  description String?
  spaceId     String
  space       Space    @relation(fields: [spaceId], references: [id], onDelete: Cascade)

  @@unique([name, spaceId])
}

model Booking {
  id        String   @id @default(uuid())
  userId    String
  spaceId   String
  startTime DateTime
  endTime   DateTime
  status    BookingStatus @default(ACTIVE)

  user      User     @relation(fields: [userId], references: [id])
  space     Space    @relation(fields: [spaceId], references: [id])

  @@index([userId])
}

enum BookingStatus {
  ACTIVE
  CANCELLED
}
